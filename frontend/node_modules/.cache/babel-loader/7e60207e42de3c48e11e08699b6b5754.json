{"ast":null,"code":"var _jsxFileName = \"/Users/saraneuenschwander/Desktop/challenges/Developers-Branch/frontend/src/components/layouts/Alerts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Toast from 'react-bootstrap/Toast';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Alert = _ref => {\n  _s();\n\n  let {\n    alerts\n  } = _ref;\n  const [show, setShow] = useState(false);\n\n  const toggleShow = () => setShow(!show);\n\n  const [currentAlert, setCurrentAlert] = useState(null);\n  useEffect(() => {\n    if (alerts) {\n      setCurrentAlert(alerts);\n      setShow(true);\n    } else setShow(false);\n  }, [alerts]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"style\", {\n      type: \"text/css\",\n      children: `\n                    .toast_container {\n                        min-width: 300px;\n                        max-width: 380px;\n                        position: fixed;\n\t\t\t\t\t    top: 4rem;\n\t\t\t\t\t    right: 1%;\n\t\t\t\t\t\tz-index: 99;\n                    }\n\t\t\t\t\t.toast {\n\t\t\t\t\t\tbackground-color: #ffffff;\n\t\t\t\t\t}\n                    .toast-header {\n                        background-color: \n                        ${currentAlert && currentAlert.success ? '#4CAF50' : '#F44336'};\n                        color: #fff;\n                    }\n                    .toast-header button {\n                        outline: none;\n                        color: #fff;\n                        font-weight: 500;\n                    }\n                    .toast-header button:hover {\n                        color: #fff;\n                    }\n                `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toast_container\",\n      children: currentAlert && Array.isArray(currentAlert) ? currentAlert.map((alert, index) => /*#__PURE__*/_jsxDEV(Toast, {\n        show: show,\n        onClose: toggleShow,\n        children: [/*#__PURE__*/_jsxDEV(\"style\", {\n          children: `\n                                    .toast-header {\n                                        background-color: \n                                        ${alert.success ? '#4CAF50' : '#F44336'};\n                                    }\n                                `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-auto\",\n            children: alert.success ? 'Notification' : 'Error'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 8\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: alert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 8\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)) : /*#__PURE__*/_jsxDEV(Toast, {\n        show: show,\n        onClose: toggleShow,\n        children: [/*#__PURE__*/_jsxDEV(Toast.Header, {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mr-auto\",\n            children: currentAlert && currentAlert.success ? 'Notification' : 'Error'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 8\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(Toast.Body, {\n          children: currentAlert && currentAlert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Alert, \"vVGYCDocY81+pFKXm1favbOjUdw=\");\n\n_c = Alert;\n\nconst mapStateToProps = state => ({\n  alerts: state.ALERTS\n});\n\nexport default connect(mapStateToProps, {})(Alert);\n\nvar _c;\n\n$RefreshReg$(_c, \"Alert\");","map":{"version":3,"names":["React","useState","useEffect","connect","Toast","Alert","alerts","show","setShow","toggleShow","currentAlert","setCurrentAlert","success","Array","isArray","map","alert","index","message","mapStateToProps","state","ALERTS"],"sources":["/Users/saraneuenschwander/Desktop/challenges/Developers-Branch/frontend/src/components/layouts/Alerts.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Toast from 'react-bootstrap/Toast';\r\n\r\nconst Alert = ({ alerts }) => {\r\n\tconst [show, setShow] = useState(false);\r\n\r\n\tconst toggleShow = () => setShow(!show);\r\n\r\n\tconst [currentAlert, setCurrentAlert] = useState(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (alerts) {\r\n\t\t\tsetCurrentAlert(alerts);\r\n\t\t\tsetShow(true);\r\n\t\t} else setShow(false);\r\n\t}, [alerts]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<style type='text/css'>\r\n\t\t\t\t{`\r\n                    .toast_container {\r\n                        min-width: 300px;\r\n                        max-width: 380px;\r\n                        position: fixed;\r\n\t\t\t\t\t    top: 4rem;\r\n\t\t\t\t\t    right: 1%;\r\n\t\t\t\t\t\tz-index: 99;\r\n                    }\r\n\t\t\t\t\t.toast {\r\n\t\t\t\t\t\tbackground-color: #ffffff;\r\n\t\t\t\t\t}\r\n                    .toast-header {\r\n                        background-color: \r\n                        ${currentAlert && currentAlert.success ? '#4CAF50' : '#F44336'};\r\n                        color: #fff;\r\n                    }\r\n                    .toast-header button {\r\n                        outline: none;\r\n                        color: #fff;\r\n                        font-weight: 500;\r\n                    }\r\n                    .toast-header button:hover {\r\n                        color: #fff;\r\n                    }\r\n                `}\r\n\t\t\t</style>\r\n\t\t\t<div className='toast_container'>\r\n\t\t\t\t{currentAlert && Array.isArray(currentAlert) ? (\r\n\t\t\t\t\tcurrentAlert.map((alert, index) => (\r\n\t\t\t\t\t\t<Toast show={show} onClose={toggleShow} key={index}>\r\n\t\t\t\t\t\t\t<style>\r\n\t\t\t\t\t\t\t\t{`\r\n                                    .toast-header {\r\n                                        background-color: \r\n                                        ${alert.success ? '#4CAF50' : '#F44336'};\r\n                                    }\r\n                                `}\r\n\t\t\t\t\t\t\t</style>\r\n\t\t\t\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t\t\t\t<span className='mr-auto'>{alert.success ? 'Notification' : 'Error'}</span>\r\n\t\t\t\t\t\t\t</Toast.Header>\r\n\t\t\t\t\t\t\t<Toast.Body>{alert.message}</Toast.Body>\r\n\t\t\t\t\t\t</Toast>\r\n\t\t\t\t\t))\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<Toast show={show} onClose={toggleShow}>\r\n\t\t\t\t\t\t<Toast.Header>\r\n\t\t\t\t\t\t\t<span className='mr-auto'>\r\n\t\t\t\t\t\t\t\t{currentAlert && currentAlert.success ? 'Notification' : 'Error'}\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</Toast.Header>\r\n\t\t\t\t\t\t<Toast.Body>{currentAlert && currentAlert.message}</Toast.Body>\r\n\t\t\t\t\t</Toast>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n\talerts: state.ALERTS,\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Alert);\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,uBAAlB;;;;AAEA,MAAMC,KAAK,GAAG,QAAgB;EAAA;;EAAA,IAAf;IAAEC;EAAF,CAAe;EAC7B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;;EAEA,MAAMQ,UAAU,GAAG,MAAMD,OAAO,CAAC,CAACD,IAAF,CAAhC;;EAEA,MAAM,CAACG,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,IAAD,CAAhD;EAEAC,SAAS,CAAC,MAAM;IACf,IAAII,MAAJ,EAAY;MACXK,eAAe,CAACL,MAAD,CAAf;MACAE,OAAO,CAAC,IAAD,CAAP;IACA,CAHD,MAGOA,OAAO,CAAC,KAAD,CAAP;EACP,CALQ,EAKN,CAACF,MAAD,CALM,CAAT;EAOA,oBACC;IAAA,wBACC;MAAO,IAAI,EAAC,UAAZ;MAAA,UACG;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0BI,YAAY,IAAIA,YAAY,CAACE,OAA7B,GAAuC,SAAvC,GAAmD,SAAU;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IA1BG;MAAA;MAAA;MAAA;IAAA,QADD,eA6BC;MAAK,SAAS,EAAC,iBAAf;MAAA,UACEF,YAAY,IAAIG,KAAK,CAACC,OAAN,CAAcJ,YAAd,CAAhB,GACAA,YAAY,CAACK,GAAb,CAAiB,CAACC,KAAD,EAAQC,KAAR,kBAChB,QAAC,KAAD;QAAO,IAAI,EAAEV,IAAb;QAAmB,OAAO,EAAEE,UAA5B;QAAA,wBACC;UAAA,UACG;AACV;AACA;AACA,0CAA0CO,KAAK,CAACJ,OAAN,GAAgB,SAAhB,GAA4B,SAAU;AAChF;AACA;QANO;UAAA;UAAA;UAAA;QAAA,QADD,eASC,QAAC,KAAD,CAAO,MAAP;UAAA,uBACC;YAAM,SAAS,EAAC,SAAhB;YAAA,UAA2BI,KAAK,CAACJ,OAAN,GAAgB,cAAhB,GAAiC;UAA5D;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QATD,eAYC,QAAC,KAAD,CAAO,IAAP;UAAA,UAAaI,KAAK,CAACE;QAAnB;UAAA;UAAA;UAAA;QAAA,QAZD;MAAA,GAA6CD,KAA7C;QAAA;QAAA;QAAA;MAAA,QADD,CADA,gBAkBA,QAAC,KAAD;QAAO,IAAI,EAAEV,IAAb;QAAmB,OAAO,EAAEE,UAA5B;QAAA,wBACC,QAAC,KAAD,CAAO,MAAP;UAAA,uBACC;YAAM,SAAS,EAAC,SAAhB;YAAA,UACEC,YAAY,IAAIA,YAAY,CAACE,OAA7B,GAAuC,cAAvC,GAAwD;UAD1D;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QADD,eAMC,QAAC,KAAD,CAAO,IAAP;UAAA,UAAaF,YAAY,IAAIA,YAAY,CAACQ;QAA1C;UAAA;UAAA;UAAA;QAAA,QAND;MAAA;QAAA;QAAA;QAAA;MAAA;IAnBF;MAAA;MAAA;MAAA;IAAA,QA7BD;EAAA,gBADD;AA6DA,CA3ED;;GAAMb,K;;KAAAA,K;;AA6EN,MAAMc,eAAe,GAAIC,KAAD,KAAY;EACnCd,MAAM,EAAEc,KAAK,CAACC;AADqB,CAAZ,CAAxB;;AAIA,eAAelB,OAAO,CAACgB,eAAD,EAAkB,EAAlB,CAAP,CAA6Bd,KAA7B,CAAf"},"metadata":{},"sourceType":"module"}