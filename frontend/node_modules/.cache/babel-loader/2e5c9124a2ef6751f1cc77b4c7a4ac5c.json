{"ast":null,"code":"// Action Types\nimport { FETCH_POSTS, ADD_POST, POST_REACTION, ADD_COMMENT, DELETE_POST, DELETE_COMMENT, ADD_ALERTS, GET_SINGLE_POST, SINGLE_POST_LOADER } from '../types';\nimport sendRequest from '../utils/axios-setup';\n\nconst fetchPosts = () => async dispatch => {\n  try {\n    const res = await sendRequest.get(`/posts`);\n    dispatch({\n      type: FETCH_POSTS,\n      payload: res.data.results\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nconst addPost = data => async dispatch => {\n  try {\n    const res = await sendRequest.post(`/posts`, data);\n    dispatch({\n      type: ADD_POST,\n      payload: res.data.newPost\n    });\n    dispatch({\n      type: ADD_ALERTS,\n      payload: { ...res.data,\n        newPost: undefined\n      }\n    });\n    return true;\n  } catch (e) {\n    dispatch({\n      type: ADD_ALERTS,\n      payload: e.response && e.response.data\n    });\n  }\n};\n\nconst deletePostFromAccount = id => async dispatch => {\n  try {\n    const res = await sendRequest.delete(`/posts/${id}`);\n    dispatch({\n      type: DELETE_POST,\n      payload: id\n    });\n    dispatch({\n      type: ADD_ALERTS,\n      payload: res.data\n    });\n    return true;\n  } catch (e) {\n    console.log(e);\n    dispatch({\n      type: ADD_ALERTS,\n      payload: e.response && e.response.data\n    });\n  }\n};\n\nconst postReaction = (id, like) => async dispatch => {\n  try {\n    const res = await sendRequest.post(`/posts/${id}/reactions`, {\n      reaction: like\n    });\n    dispatch({\n      type: POST_REACTION,\n      payload: {\n        id,\n        reaction: like ? 1 : 0\n      }\n    });\n    dispatch({\n      type: ADD_ALERTS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: ADD_ALERTS,\n      payload: e.response && e.response.data\n    });\n  }\n};\n\nconst getSinglePostWithComments = id => async dispatch => {\n  try {\n    dispatch({\n      type: SINGLE_POST_LOADER,\n      payload: true\n    });\n    const res = await sendRequest.get(`/posts/${id}`);\n    dispatch({\n      type: GET_SINGLE_POST,\n      payload: {\n        loading: false,\n        ...res.data.results\n      }\n    });\n  } catch (e) {\n    dispatch({\n      type: ADD_ALERTS,\n      payload: e.response && e.response.data\n    });\n    dispatch({\n      type: GET_SINGLE_POST,\n      payload: {\n        post: {\n          id\n        }\n      }\n    });\n  }\n};\n\nconst addComment = (id, data) => async dispatch => {\n  try {\n    const res = await sendRequest.post(`/posts/${id}/comments`, data);\n    dispatch({\n      type: ADD_COMMENT,\n      payload: res.data.newComment\n    });\n    dispatch({\n      type: ADD_ALERTS,\n      payload: { ...res.data,\n        newComment: undefined\n      }\n    });\n    return true;\n  } catch (e) {\n    dispatch({\n      type: ADD_ALERTS,\n      payload: e.response && e.response.data\n    });\n  }\n};\n\nconst deleteCommentFromAccount = (postID, commentID) => async dispatch => {\n  try {\n    const res = await sendRequest.delete(`/posts/${postID}/comments/${commentID}`);\n    dispatch({\n      type: DELETE_COMMENT,\n      payload: {\n        postID,\n        commentID\n      }\n    });\n    dispatch({\n      type: ADD_ALERTS,\n      payload: res.data\n    });\n  } catch (e) {\n    dispatch({\n      type: ADD_ALERTS,\n      payload: e.response && e.response.data\n    });\n  }\n};\n\nexport { fetchPosts, addPost, deletePostFromAccount, postReaction, getSinglePostWithComments, addComment, deleteCommentFromAccount };","map":{"version":3,"names":["FETCH_POSTS","ADD_POST","POST_REACTION","ADD_COMMENT","DELETE_POST","DELETE_COMMENT","ADD_ALERTS","GET_SINGLE_POST","SINGLE_POST_LOADER","sendRequest","fetchPosts","dispatch","res","get","type","payload","data","results","e","console","log","addPost","post","newPost","undefined","response","deletePostFromAccount","id","delete","postReaction","like","reaction","getSinglePostWithComments","loading","addComment","newComment","deleteCommentFromAccount","postID","commentID"],"sources":["/Users/saraneuenschwander/Desktop/challenges/Developers-Branch/frontend/src/store/actions/posts.js"],"sourcesContent":["// Action Types\r\nimport {\r\n\tFETCH_POSTS,\r\n\tADD_POST,\r\n\tPOST_REACTION,\r\n\tADD_COMMENT,\r\n\tDELETE_POST,\r\n\tDELETE_COMMENT,\r\n\tADD_ALERTS,\r\n\tGET_SINGLE_POST,\r\n\tSINGLE_POST_LOADER,\r\n} from '../types';\r\n\r\nimport sendRequest from '../utils/axios-setup';\r\n\r\nconst fetchPosts = () => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await sendRequest.get(`/posts`);\r\n\t\tdispatch({\r\n\t\t\ttype: FETCH_POSTS,\r\n\t\t\tpayload: res.data.results,\r\n\t\t});\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t}\r\n};\r\n\r\nconst addPost = (data) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await sendRequest.post(`/posts`, data);\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_POST,\r\n\t\t\tpayload: res.data.newPost,\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: { ...res.data, newPost: undefined },\r\n\t\t});\r\n\t\treturn true;\r\n\t} catch (e) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: e.response && e.response.data,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst deletePostFromAccount = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await sendRequest.delete(`/posts/${id}`);\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_POST,\r\n\t\t\tpayload: id,\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t\treturn true;\r\n\t} catch (e) {\r\n\t\tconsole.log(e);\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: e.response && e.response.data,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst postReaction = (id, like) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await sendRequest.post(`/posts/${id}/reactions`, { reaction: like });\r\n\t\tdispatch({\r\n\t\t\ttype: POST_REACTION,\r\n\t\t\tpayload: { id, reaction: like ? 1 : 0 },\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (e) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: e.response && e.response.data,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst getSinglePostWithComments = (id) => async (dispatch) => {\r\n\ttry {\r\n\t\tdispatch({\r\n\t\t\ttype: SINGLE_POST_LOADER,\r\n\t\t\tpayload: true,\r\n\t\t});\r\n\t\tconst res = await sendRequest.get(`/posts/${id}`);\r\n\t\tdispatch({\r\n\t\t\ttype: GET_SINGLE_POST,\r\n\t\t\tpayload: { loading: false, ...res.data.results },\r\n\t\t});\r\n\t} catch (e) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: e.response && e.response.data,\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: GET_SINGLE_POST,\r\n\t\t\tpayload: { post: { id } },\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst addComment = (id, data) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await sendRequest.post(`/posts/${id}/comments`, data);\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_COMMENT,\r\n\t\t\tpayload: res.data.newComment,\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: { ...res.data, newComment: undefined },\r\n\t\t});\r\n\t\treturn true;\r\n\t} catch (e) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: e.response && e.response.data,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nconst deleteCommentFromAccount = (postID, commentID) => async (dispatch) => {\r\n\ttry {\r\n\t\tconst res = await sendRequest.delete(`/posts/${postID}/comments/${commentID}`);\r\n\t\tdispatch({\r\n\t\t\ttype: DELETE_COMMENT,\r\n\t\t\tpayload: { postID, commentID },\r\n\t\t});\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: res.data,\r\n\t\t});\r\n\t} catch (e) {\r\n\t\tdispatch({\r\n\t\t\ttype: ADD_ALERTS,\r\n\t\t\tpayload: e.response && e.response.data,\r\n\t\t});\r\n\t}\r\n};\r\n\r\nexport {\r\n\tfetchPosts,\r\n\taddPost,\r\n\tdeletePostFromAccount,\r\n\tpostReaction,\r\n\tgetSinglePostWithComments,\r\n\taddComment,\r\n\tdeleteCommentFromAccount,\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}